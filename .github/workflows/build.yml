name: "Build"

on:
  push:
    branches:
      - main
      # - dev
  pull_request:
    branches:
      - main
      # - dev

jobs:
  build:
    # The machine, we can also use windows-latest, macos-latest or ubuntu-latest
    # Si usamos ubuntu-latest o windows-latest gastamos 1min de creditos por cada 1min
    # Si usamos macos-latest gastamos 10min de creditos por cada 1min
    name: Build & Release
    runs-on: ubuntu-latest
    # runs-on: macos-latest
    timeout-minutes: 20

    steps:
      #1 Checkout Repository, Clones the project on the machine
      - name: Checkout Repository
        uses: actions/checkout@v4

        #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: "oracle"
          java-version: "17"

        #3 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          # flutter-version: '3.22.2'
          # ^ If you want to use a specific version of flutter
          cache: true

        #4 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

        #5 Verifies if the dart code is formatted well
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
        # --set-exit-if-changed stops execution if the any code is not well formatted
        # --output=none prints files which needs to be formatted

        #6 Checks for Symantic errors. Can be configured using analysis_options.yaml
      - name: Analyze project source
        run: flutter analyze --fatal-warnings
        # optionally use --fatal-warnings to stop execution if any warnings are found

        #7 Runs unit test
      - name: Run tests
        run: flutter test

        #8 Setup Keystore
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

        #9 Building APK
      - name: Build APK
        run: flutter build apk --release

        #10 Building App Bundle (aab) de forma ofuscada
      - name: Build appBundle
        run: flutter build appbundle --obfuscate --split-debug-info=build/app/outputs/bundle/release

      #   #11 Build IPA ( IOS Build )
      # - name: Build IPA
      #   run: flutter build ipa --no-codesign
      # - name: Compress Archives and IPAs
      #   run: |
      #     cd build
      #     tar -czf ios_build.tar.gz ios
      #   #12 Upload Artifacts With IOS
      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: Releases
      #     path: |
      #       build/app/outputs/flutter-apk/app-release.apk
      #       build/app/outputs/bundle/release/app-release.aab
      #       build/ios_build.tar.gz
      #12 Upload Artifacts Without IOS
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

        #13 Extract Version
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

        #14 Check if Tag Exists
      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

        #15 Modify Tag if it Exists
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      #   #16 Create Release With IOS
      # - name: Create Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab,build/ios_build.tar.gz"
      #     tag: v${{ env.VERSION }}
      #     token: ${{ secrets.TOKEN }}

      #16 Create Release Without IOS
      - name: Create Release Android
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}
